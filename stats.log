Welcome to the CBC MILP Solver 
Version: 2.9.0 
Build Date: Feb 12 2015 

command line - C:\Users\zoria\miniconda3\envs\py37\lib\site-packages\pulp\apis\..\solverdir\cbc\win\64\cbc.exe C:\Users\zoria\AppData\Local\Temp\7a667313495149349c901c6740d65c88-pulp.mps max DivingVectorlength on DivingSome on ratio 0.0 branch printingOptions all solution C:\Users\zoria\AppData\Local\Temp\7a667313495149349c901c6740d65c88-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 9926 COLUMNS
At line 87392 RHS
At line 97314 BOUNDS
At line 105968 ENDATA
Problem MODEL has 9921 rows, 8653 columns and 52499 elements
Coin0008I MODEL read with 0 errors
Option for DivingVectorLength changed from off to on
Option for DivingSome changed from off to on
ratioGap was changed from 0 to 0
Continuous objective value is 855.367 - 0.11 seconds
Cgl0003I 0 fixed, 267 tightened bounds, 340 strengthened rows, 0 substitutions
Cgl0004I processed model has 1967 rows, 2114 columns (2114 integer (1149 of which binary)) and 9051 elements
Cutoff increment increased from 1e-005 to 0.0001998
Cbc0038I Initial state - 195 integers unsatisfied sum - 14.55
Cbc0038I Pass   1: suminf.    4.03000 (130) obj. -609.808 iterations 396
Cbc0038I Pass   2: suminf.    4.96369 (135) obj. -625.373 iterations 74
Cbc0038I Pass   3: suminf.   10.99798 (151) obj. -624.649 iterations 8
Cbc0038I Pass   4: suminf.    3.73088 (122) obj. -627.021 iterations 31
Cbc0038I Pass   5: suminf.    9.89873 (153) obj. -626.51 iterations 7
Cbc0038I Pass   6: suminf.   25.51061 (138) obj. -627.705 iterations 36
Cbc0038I Pass   7: suminf.   11.15983 (150) obj. -629.351 iterations 14
Cbc0038I Pass   8: suminf.   25.17061 (121) obj. -624.035 iterations 40
Cbc0038I Pass   9: suminf.   13.94493 (142) obj. -624.835 iterations 15
Cbc0038I Pass  10: suminf.   20.75450 (123) obj. -583.137 iterations 142
Cbc0038I Pass  11: suminf.   29.69826 (149) obj. -551.847 iterations 83
Cbc0038I Pass  12: suminf.   17.25412 (101) obj. -577.589 iterations 118
Cbc0038I Pass  13: suminf.   30.75643 (115) obj. -565.16 iterations 38
Cbc0038I Pass  14: suminf.   13.50071 (106) obj. -577.981 iterations 37
Cbc0038I Pass  15: suminf.   28.36751 (128) obj. -562.419 iterations 67
Cbc0038I Pass  16: suminf.   22.27107 (102) obj. -580.301 iterations 104
Cbc0038I Pass  17: suminf.   26.73833 (129) obj. -549.546 iterations 72
Cbc0038I Pass  18: suminf.   23.61464 (106) obj. -568.275 iterations 74
Cbc0038I Pass  19: suminf.   19.89804 (107) obj. -554.165 iterations 60
Cbc0038I Pass  20: suminf.   24.64757 (117) obj. -587.374 iterations 102
Cbc0038I Pass  21: suminf.   26.15251 (121) obj. -548.346 iterations 64
Cbc0038I Pass  22: suminf.   23.37863 (105) obj. -550.737 iterations 78
Cbc0038I Pass  23: suminf.   17.52499 (118) obj. -547.339 iterations 39
Cbc0038I Pass  24: suminf.   22.16796 (117) obj. -574.762 iterations 120
Cbc0038I Pass  25: suminf.   19.97951 (96) obj. -540.194 iterations 56
Cbc0038I Pass  26: suminf.   28.92859 (109) obj. -545.617 iterations 65
Cbc0038I Pass  27: suminf.   16.57468 (77) obj. -531.764 iterations 59
Cbc0038I Pass  28: suminf.   22.69963 (115) obj. -569.083 iterations 82
Cbc0038I Pass  29: suminf.   18.54971 (73) obj. -535.35 iterations 59
Cbc0038I Pass  30: suminf.   35.65882 (133) obj. -554.811 iterations 88
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1383 integers at bound fixed and 0 continuous of which 63 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.85 seconds)
Cbc0038I After 0.86 seconds - Feasibility pump exiting - took 0.33 seconds
Cbc0031I 581 added rows had average density of 12.791738
Cbc0013I At root node, 581 cuts changed objective from -855.3237 to -663.89381 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 1389 row cuts average 2.4 elements, 0 column cuts (293 active)  in 0.175 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 528 row cuts average 116.0 elements, 0 column cuts (0 active)  in 0.562 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 148 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 238 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 430 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 538 row cuts average 72.9 elements, 0 column cuts (0 active)  in 0.662 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+050 best solution, best possible -663.89381 (5.35 seconds)
Cbc0010I After 100 nodes, 62 on tree, 1e+050 best solution, best possible -663.89381 (30.31 seconds)
Cbc0010I After 200 nodes, 116 on tree, 1e+050 best solution, best possible -663.89381 (32.91 seconds)
Cbc0010I After 300 nodes, 167 on tree, 1e+050 best solution, best possible -663.89381 (35.18 seconds)
Cbc0010I After 400 nodes, 216 on tree, 1e+050 best solution, best possible -663.89381 (37.38 seconds)
Cbc0010I After 500 nodes, 265 on tree, 1e+050 best solution, best possible -663.89381 (39.11 seconds)
Cbc0010I After 600 nodes, 316 on tree, 1e+050 best solution, best possible -663.89381 (40.82 seconds)
Cbc0010I After 700 nodes, 367 on tree, 1e+050 best solution, best possible -663.89381 (42.96 seconds)
Cbc0010I After 800 nodes, 416 on tree, 1e+050 best solution, best possible -663.89381 (44.79 seconds)
Cbc0010I After 900 nodes, 467 on tree, 1e+050 best solution, best possible -663.89381 (46.64 seconds)
Cbc0010I After 1000 nodes, 516 on tree, 1e+050 best solution, best possible -663.89381 (48.72 seconds)
Cbc0012I Integer solution of -600.1114 found by rounding after 27748 iterations and 1100 nodes (61.85 seconds)
Cbc0010I After 1100 nodes, 615 on tree, -600.1114 best solution, best possible -663.45996 (61.87 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 230 rows 192 columns
Cbc0012I Integer solution of -640.2924 found by RINS after 36477 iterations and 1200 nodes (68.22 seconds)
Cbc0010I After 1200 nodes, 71 on tree, -640.2924 best solution, best possible -663.45996 (68.26 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 315 rows 287 columns
Cbc0012I Integer solution of -640.9024 found by RINS after 82324 iterations and 1300 nodes (90.36 seconds)
Cbc0010I After 1300 nodes, 109 on tree, -640.9024 best solution, best possible -663.45996 (90.36 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 311 rows 285 columns
Cbc0010I After 1400 nodes, 156 on tree, -640.9024 best solution, best possible -663.45996 (116.89 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 240 rows 229 columns
Cbc0010I After 1500 nodes, 190 on tree, -640.9024 best solution, best possible -663.45996 (132.64 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 322 rows 264 columns
Cbc0010I After 1600 nodes, 215 on tree, -640.9024 best solution, best possible -663.45996 (147.31 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 247 rows 243 columns
Cbc0012I Integer solution of -640.9928 found by RINS after 215943 iterations and 1700 nodes (160.41 seconds)
Cbc0010I After 1700 nodes, 230 on tree, -640.9928 best solution, best possible -663.45996 (160.41 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 151 rows 147 columns
Cbc0010I After 1800 nodes, 248 on tree, -640.9928 best solution, best possible -663.45996 (177.30 seconds)
Cbc0010I After 1900 nodes, 268 on tree, -640.9928 best solution, best possible -663.45996 (191.15 seconds)
Cbc0010I After 2000 nodes, 276 on tree, -640.9928 best solution, best possible -663.45996 (202.18 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 385 rows 383 columns
Cbc0012I Integer solution of -641.0832 found by RINS after 309358 iterations and 2002 nodes (202.50 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 84 rows 96 columns
Cbc0012I Integer solution of -642.3272 found by RINS after 325366 iterations and 2100 nodes (209.27 seconds)
Cbc0010I After 2100 nodes, 258 on tree, -642.3272 best solution, best possible -663.45996 (209.27 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 172 rows 145 columns
Cbc0012I Integer solution of -642.3642 found by RINS after 354867 iterations and 2200 nodes (220.78 seconds)
Cbc0010I After 2200 nodes, 259 on tree, -642.3642 best solution, best possible -663.45996 (220.78 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 282 rows 222 columns
Cbc0012I Integer solution of -642.5554 found by RINS after 382623 iterations and 2300 nodes (230.69 seconds)
Cbc0010I After 2300 nodes, 246 on tree, -642.5554 best solution, best possible -663.45996 (230.69 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 333 rows 283 columns
Cbc0010I After 2400 nodes, 237 on tree, -642.5554 best solution, best possible -663.45996 (241.66 seconds)
Cbc0010I After 2500 nodes, 232 on tree, -642.5554 best solution, best possible -663.45996 (249.87 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 184 rows 164 columns
Cbc0012I Integer solution of -642.5854 found by RINS after 455738 iterations and 2600 nodes (257.84 seconds)
Cbc0010I After 2600 nodes, 221 on tree, -642.5854 best solution, best possible -663.45996 (257.84 seconds)
Cbc0010I After 2700 nodes, 205 on tree, -642.5854 best solution, best possible -663.45996 (265.40 seconds)
Cbc0010I After 2800 nodes, 190 on tree, -642.5854 best solution, best possible -663.45996 (272.10 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 177 rows 151 columns
Cbc0012I Integer solution of -642.6402 found by RINS after 503076 iterations and 2815 nodes (272.75 seconds)
Cbc0010I After 2900 nodes, 163 on tree, -642.6402 best solution, best possible -663.45996 (277.84 seconds)
Cbc0010I After 3000 nodes, 145 on tree, -642.6402 best solution, best possible -663.45996 (285.31 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 346 rows 318 columns
Cbc0012I Integer solution of -642.6698 found by RINS after 549854 iterations and 3015 nodes (287.11 seconds)
Cbc0010I After 3100 nodes, 121 on tree, -642.6698 best solution, best possible -663.45996 (291.85 seconds)
Cbc0010I After 3200 nodes, 95 on tree, -642.6698 best solution, best possible -663.45996 (298.35 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 239 rows 219 columns
Cbc0010I After 3300 nodes, 62 on tree, -642.6698 best solution, best possible -663.45996 (305.48 seconds)
Cbc0010I After 3400 nodes, 34 on tree, -642.6698 best solution, best possible -663.45996 (312.02 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 255 rows 207 columns
Cbc0012I Integer solution of -642.8032 found by RINS after 633139 iterations and 3419 nodes (313.04 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 244 rows 222 columns
Cbc0012I Integer solution of -642.8092 found by RINS after 657667 iterations and 3500 nodes (328.41 seconds)
Cbc0010I After 3500 nodes, 6 on tree, -642.8092 best solution, best possible -663.45996 (328.41 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 238 rows 231 columns
Cbc0010I After 3600 nodes, 6 on tree, -642.8092 best solution, best possible -663.45996 (350.59 seconds)
Cbc0001I Search completed - best objective -642.8092000000007, took 695931 iterations and 3643 nodes (360.79 seconds)
Cbc0032I Strong branching done 16502 times (429388 iterations), fathomed 11 nodes and fixed 61 variables
Cbc0035I Maximum depth 108, 38193 variables fixed on reduced cost
Cuts at root node changed objective from -855.324 to -663.894
Probing was tried 3924 times and created 241345 cuts of which 332 were active after adding rounds of cuts (25.470 seconds)
Gomory was tried 3641 times and created 11882 cuts of which 0 were active after adding rounds of cuts (29.581 seconds)
Knapsack was tried 3642 times and created 4990 cuts of which 0 were active after adding rounds of cuts (24.737 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
MixedIntegerRounding2 was tried 3642 times and created 15424 cuts of which 2 were active after adding rounds of cuts (10.820 seconds)
FlowCover was tried 3642 times and created 1984 cuts of which 0 were active after adding rounds of cuts (3.395 seconds)
TwoMirCuts was tried 3641 times and created 5878 cuts of which 0 were active after adding rounds of cuts (9.364 seconds)
ImplicationCuts was tried 189 times and created 6483 cuts of which 0 were active after adding rounds of cuts (0.106 seconds)

Result - Optimal solution found

Objective value:                642.80920000
Enumerated nodes:               3643
Total iterations:               695931
Time (CPU seconds):             360.88
Time (Wallclock seconds):       360.88

Option for printingOptions changed from normal to all
Total time (CPU seconds):       361.11   (Wallclock seconds):       361.11

