Welcome to the CBC MILP Solver 
Version: 2.9.0 
Build Date: Feb 12 2015 

command line - C:\Users\zoria\miniconda3\envs\py37\lib\site-packages\pulp\apis\..\solverdir\cbc\win\64\cbc.exe C:\Users\zoria\AppData\Local\Temp\74d261f50a244f8dbe64051697afadb4-pulp.mps max DivingVectorlength on DivingSome on ratio 0.0 branch printingOptions all solution C:\Users\zoria\AppData\Local\Temp\74d261f50a244f8dbe64051697afadb4-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 9926 COLUMNS
At line 87392 RHS
At line 97314 BOUNDS
At line 105968 ENDATA
Problem MODEL has 9921 rows, 8653 columns and 52499 elements
Coin0008I MODEL read with 0 errors
Option for DivingVectorLength changed from off to on
Option for DivingSome changed from off to on
ratioGap was changed from 0 to 0
Continuous objective value is 855.367 - 0.12 seconds
Cgl0003I 0 fixed, 267 tightened bounds, 340 strengthened rows, 0 substitutions
Cgl0004I processed model has 1967 rows, 2114 columns (2114 integer (1149 of which binary)) and 9051 elements
Cutoff increment increased from 1e-005 to 0.0001998
Cbc0038I Initial state - 195 integers unsatisfied sum - 14.55
Cbc0038I Pass   1: suminf.    4.03000 (130) obj. -609.808 iterations 396
Cbc0038I Pass   2: suminf.    4.96369 (135) obj. -625.373 iterations 74
Cbc0038I Pass   3: suminf.   10.99798 (151) obj. -624.649 iterations 8
Cbc0038I Pass   4: suminf.    3.73088 (122) obj. -627.021 iterations 31
Cbc0038I Pass   5: suminf.    9.89873 (153) obj. -626.51 iterations 7
Cbc0038I Pass   6: suminf.   25.51061 (138) obj. -627.705 iterations 36
Cbc0038I Pass   7: suminf.   11.15983 (150) obj. -629.351 iterations 14
Cbc0038I Pass   8: suminf.   25.17061 (121) obj. -624.035 iterations 40
Cbc0038I Pass   9: suminf.   13.94493 (142) obj. -624.835 iterations 15
Cbc0038I Pass  10: suminf.   20.75450 (123) obj. -583.137 iterations 142
Cbc0038I Pass  11: suminf.   29.69826 (149) obj. -551.847 iterations 83
Cbc0038I Pass  12: suminf.   17.25412 (101) obj. -577.589 iterations 118
Cbc0038I Pass  13: suminf.   30.75643 (115) obj. -565.16 iterations 38
Cbc0038I Pass  14: suminf.   13.50071 (106) obj. -577.981 iterations 37
Cbc0038I Pass  15: suminf.   28.36751 (128) obj. -562.419 iterations 67
Cbc0038I Pass  16: suminf.   22.27107 (102) obj. -580.301 iterations 104
Cbc0038I Pass  17: suminf.   26.73833 (129) obj. -549.546 iterations 72
Cbc0038I Pass  18: suminf.   23.61464 (106) obj. -568.275 iterations 74
Cbc0038I Pass  19: suminf.   19.89804 (107) obj. -554.165 iterations 60
Cbc0038I Pass  20: suminf.   24.64757 (117) obj. -587.374 iterations 102
Cbc0038I Pass  21: suminf.   26.15251 (121) obj. -548.346 iterations 64
Cbc0038I Pass  22: suminf.   23.37863 (105) obj. -550.737 iterations 78
Cbc0038I Pass  23: suminf.   17.52499 (118) obj. -547.339 iterations 39
Cbc0038I Pass  24: suminf.   22.16796 (117) obj. -574.762 iterations 120
Cbc0038I Pass  25: suminf.   19.97951 (96) obj. -540.194 iterations 56
Cbc0038I Pass  26: suminf.   28.92859 (109) obj. -545.617 iterations 65
Cbc0038I Pass  27: suminf.   16.57468 (77) obj. -531.764 iterations 59
Cbc0038I Pass  28: suminf.   22.69963 (115) obj. -569.083 iterations 82
Cbc0038I Pass  29: suminf.   18.54971 (73) obj. -535.35 iterations 59
Cbc0038I Pass  30: suminf.   35.65882 (133) obj. -554.811 iterations 88
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1383 integers at bound fixed and 0 continuous of which 63 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.74 seconds)
Cbc0038I After 0.74 seconds - Feasibility pump exiting - took 0.26 seconds
Cbc0031I 581 added rows had average density of 12.791738
Cbc0013I At root node, 581 cuts changed objective from -855.3237 to -663.89381 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 1389 row cuts average 2.4 elements, 0 column cuts (293 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 528 row cuts average 116.0 elements, 0 column cuts (0 active)  in 0.426 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 148 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 238 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 430 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 6 (TwoMirCuts) - 538 row cuts average 72.9 elements, 0 column cuts (0 active)  in 0.536 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+050 best solution, best possible -663.89381 (4.27 seconds)
Cbc0010I After 100 nodes, 63 on tree, 1e+050 best solution, best possible -663.89381 (22.01 seconds)
Cbc0012I Integer solution of -615.7252 found by rounding after 16542 iterations and 170 nodes (23.52 seconds)
Cbc0004I Integer solution of -615.8962 found after 16645 iterations and 181 nodes (23.66 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 251 rows 218 columns
Cbc0012I Integer solution of -637.0074 found by RINS after 19462 iterations and 200 nodes (25.93 seconds)
Cbc0010I After 200 nodes, 50 on tree, -637.0074 best solution, best possible -663.89381 (25.93 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 660 rows 578 columns
Cbc0012I Integer solution of -638.8184 found by RINS after 45034 iterations and 300 nodes (40.19 seconds)
Cbc0010I After 300 nodes, 98 on tree, -638.8184 best solution, best possible -663.89381 (40.19 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 163 rows 156 columns
Cbc0012I Integer solution of -638.8604 found by RINS after 62691 iterations and 400 nodes (49.43 seconds)
Cbc0010I After 400 nodes, 131 on tree, -638.8604 best solution, best possible -663.89381 (49.43 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 421 rows 400 columns
Cbc0010I After 500 nodes, 157 on tree, -638.8604 best solution, best possible -663.89381 (60.27 seconds)
Cbc0010I After 600 nodes, 192 on tree, -638.8604 best solution, best possible -663.89381 (70.81 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 317 rows 317 columns
Cbc0012I Integer solution of -639.9556 found by RINS after 121484 iterations and 700 nodes (79.16 seconds)
Cbc0010I After 700 nodes, 211 on tree, -639.9556 best solution, best possible -663.89381 (79.16 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 143 rows 133 columns
Cbc0012I Integer solution of -640.0998 found by RINS after 144900 iterations and 800 nodes (90.60 seconds)
Cbc0010I After 800 nodes, 244 on tree, -640.0998 best solution, best possible -663.89381 (90.60 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 303 rows 279 columns
Cbc0012I Integer solution of -640.1476 found by RINS after 164220 iterations and 900 nodes (99.42 seconds)
Cbc0010I After 900 nodes, 259 on tree, -640.1476 best solution, best possible -663.89381 (99.42 seconds)
Cbc0010I After 1000 nodes, 272 on tree, -640.1476 best solution, best possible -663.89381 (106.80 seconds)
Cbc0010I After 1100 nodes, 248 on tree, -640.1476 best solution, best possible -663.89381 (111.52 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 167 rows 149 columns
Cbc0010I After 1200 nodes, 227 on tree, -640.1476 best solution, best possible -663.89381 (116.56 seconds)
Cbc0010I After 1300 nodes, 207 on tree, -640.1476 best solution, best possible -663.89381 (121.95 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 277 rows 270 columns
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 275 rows 250 columns
Cbc0012I Integer solution of -640.86 found by RINS after 243729 iterations and 1400 nodes (129.19 seconds)
Cbc0010I After 1400 nodes, 180 on tree, -640.86 best solution, best possible -663.89381 (129.19 seconds)
Cbc0010I After 1500 nodes, 193 on tree, -640.86 best solution, best possible -663.89381 (139.08 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 143 rows 139 columns
Cbc0012I Integer solution of -642.0288 found by RINS after 282988 iterations and 1600 nodes (148.43 seconds)
Cbc0010I After 1600 nodes, 194 on tree, -642.0288 best solution, best possible -663.89381 (148.43 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 411 rows 384 columns
Cbc0012I Integer solution of -642.1886 found by RINS after 302027 iterations and 1700 nodes (159.06 seconds)
Cbc0010I After 1700 nodes, 188 on tree, -642.1886 best solution, best possible -663.89381 (159.06 seconds)
Cbc0010I After 1800 nodes, 184 on tree, -642.1886 best solution, best possible -663.89381 (172.02 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 284 rows 242 columns
Cbc0010I After 1900 nodes, 167 on tree, -642.1886 best solution, best possible -663.89381 (182.67 seconds)
Cbc0010I After 2000 nodes, 148 on tree, -642.1886 best solution, best possible -663.89381 (192.61 seconds)
Cbc0010I After 2100 nodes, 118 on tree, -642.1886 best solution, best possible -663.89381 (206.43 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 612 rows 528 columns
Cbc0010I After 2200 nodes, 94 on tree, -642.1886 best solution, best possible -663.89381 (217.72 seconds)
Cbc0010I After 2300 nodes, 66 on tree, -642.1886 best solution, best possible -663.89381 (226.14 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 835 rows 709 columns
Cbc0010I After 2400 nodes, 35 on tree, -642.1886 best solution, best possible -663.89381 (231.77 seconds)
Cbc0010I After 2500 nodes, 5 on tree, -642.1886 best solution, best possible -663.89381 (242.14 seconds)
Cbc0038I Full problem 1967 rows 2114 columns, reduced to 319 rows 293 columns
Cbc0010I After 2600 nodes, 5 on tree, -642.1886 best solution, best possible -663.89381 (258.70 seconds)
Cbc0001I Search completed - best objective -642.188600000001, took 463479 iterations and 2616 nodes (261.61 seconds)
Cbc0032I Strong branching done 13924 times (306971 iterations), fathomed 40 nodes and fixed 89 variables
Cbc0035I Maximum depth 83, 27426 variables fixed on reduced cost
Cuts at root node changed objective from -855.324 to -663.894
Probing was tried 2861 times and created 217790 cuts of which 331 were active after adding rounds of cuts (14.986 seconds)
Gomory was tried 2632 times and created 11870 cuts of which 3 were active after adding rounds of cuts (22.621 seconds)
Knapsack was tried 2632 times and created 6312 cuts of which 14 were active after adding rounds of cuts (16.767 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
MixedIntegerRounding2 was tried 2632 times and created 17098 cuts of which 7 were active after adding rounds of cuts (7.381 seconds)
FlowCover was tried 2632 times and created 1936 cuts of which 0 were active after adding rounds of cuts (0.950 seconds)
TwoMirCuts was tried 2632 times and created 5779 cuts of which 3 were active after adding rounds of cuts (6.037 seconds)
ImplicationCuts was tried 140 times and created 4932 cuts of which 0 were active after adding rounds of cuts (0.043 seconds)

Result - Optimal solution found

Objective value:                642.18860000
Enumerated nodes:               2616
Total iterations:               463479
Time (CPU seconds):             261.78
Time (Wallclock seconds):       261.78

Option for printingOptions changed from normal to all
Total time (CPU seconds):       262.02   (Wallclock seconds):       262.02

